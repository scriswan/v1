#!/bin/bash
# COLOR VALIDATION
clear
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
YELL='\033[0;33m'
red() { echo -e "\\033[32;1m${*}\\033[0m"; }
# Getting
MYIP=$(curl -sS ipv4.icanhazip.com)
echo -e "\e[32mloading...\e[0m"
clear
IP=$(wget -qO- icanhazip.com)
dateToday=$(date +"%Y-%m-%d")
Name=$(curl https://raw.githubusercontent.com/scriswan/lunaip/main/ip | grep $MYIP | awk '{print $2}')


# // color format 38
CC='\e[38;5;14m'  # 
LO='\e[38;5;162m' # PURPLE HACKER
UK='\e[38;5;99m'  # UNGU KOLOT
BK='\e[38;5;196m' # BEREM KOLOT 
R1='\e[38;5;155m' # HEJO SEMU BODAS
R2='\e[38;5;49m'  # HEJO LIME / APEL
BC='\e[38;5;195m' # BODAS CERAH PISAN
HU='\e[38;5;115m' # HEJO SEMU ABU
UB='\e[38;5;147m' # UNGU KABODASAN
KT='\e[38;5;187m' # KONENG TARIGU
# // color fromat 5 
BlueCyan='\e[5;36m'
WhiteBe='\e[5;37m'
GreenBe='\e[5;32m'
Xark='\e[0m'


# // On / of Autobackup
clear
switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
clear
if [ "${switch}" == "on" ]; then
sts="\033[92;1m[ON]\033[0m"
else
sts="\033[91;1m[OF]\033[0m"
fi

# //


function BR1() {
  echo -e "${LO} ┌━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┐${Xark} "
}

function BR2() {
  echo -e "${LO} └━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┘${Xark} "
}


function botBackup() {
clear

function Send_Notif() {
fileId=$(grep -o '"file_id":"[^"]*' /root/t1 | grep -o '[^"]*$')
fileId=$(grep -o '"file_id":"[^"]*' /root/t1 | grep -o '[^"]*$')

TEXT="
<code>=============================</code>
<code>         VPS DI BACKUP       </code>
<code>=============================</code>
<code> PATH LINK : $filePath </code>
<code> PATH ID   : $fileId   </code>
<code> PASSWORD  : $fileId   </code>
<code>=============================</code>
"


    curl -Ss --request GET \
        --url "https://api.telegram.org/bot${bottoken}/sendMessage?chat_id=${adminid}&text=File ${TEXT}&parse_mode=html" &>/dev/null
} 

    echo "Pergi ke @BotFather dan type /newbot untuk membuat bot baru"
    echo "Pergi ke @MissRose_bot dan type /id untuk mendapatkan ID telegram"
    echo ""
    echo ""

    read -p " Bot Token : " getToken
    echo ""
    read -p " Admin ID  : " adminID
    echo ""
    read -p " Password  : " InputPass


    echo "$getToken" >/root/.bckupbot
    echo "$adminID" >>/root/.bckupbot
    echo "$InputPass" >>/root/.bckupbot
    echo "switch $switch" >>/root/.bckupbot
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    bottoken=$(sed -n '1p' /root/.bckupbot | awk '{print $1}')
    adminid=$(sed -n '2p' /root/.bckupbot | awk '{print $1}')
    InputPass=$(sed -n '3p' /root/.bckupbot | awk '{print $1}')
    echo -e "[ ${green}INFO${NC} ] Create password "
    echo ""
    echo -e "[ ${green}INFO${NC} ] • VPS Data Backup... "
    sleep 1
    echo -e "[ ${green}INFO${NC} ] • Directory Created... "
    mkdir /root/backup &>/dev/null
    sleep 1
    echo -e "[ ${green}INFO${NC} ] • VPS Data Backup Start Now... "
    echo -e "[ ${green}INFO${NC} ] • Please Wait , Backup In Process Now... "
    sleep 1
	cp /etc/passwd backup/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Backup passwd data..."
	sleep 1
	cp /etc/group backup/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Backup group data..."
	sleep 1
	cp /etc/shadow backup/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Backup shadow data..."
	sleep 1
	cp /etc/gshadow backup/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Backup gshadow data..."
	sleep 1
	cp -r /etc/lunatic/limit backup/limit &>/dev/null
    cp -r /etc/lunatic backup/lunatic &>/dev/null
    cp -r /etc/vmess backup/vmess &>/dev/null
    cp -r /etc/trojan backup/trojan &>/dev/null
    cp -r /etc/vless backup/vless &>/dev/null
    cp -r /etc/shadowsock backup/shadowsock &>/dev/null
    cp -r /var/lib/LT/ backup/LT &>/dev/null
    cp -r /etc/xray backup/xray &>/dev/null
    cp -r /var/www/html backup/html &>/dev/null
    cd /root &>/dev/null
    zip -rP "$InputPass" "$IP-$Name-$dateToday.zip" backup >/dev/null 2>&1

    echo -e "[ ${green}INFO${NC} ] • Sending Via Bot... "
    curl -Ss --request POST \
        --url "https://api.telegram.org/bot${bottoken}/sendDocument?chat_id=${adminid}&caption=Here Your Backup Today : ${dateToday}" \
        --header 'content-type: multipart/form-data' \
        --form document=@"/root/$IP-$Name-$dateToday.zip" >/root/t1

#    fileId=$(grep -o '"file_id":"[^"]*' /root/t1 | grep -o '[^"]*$')

#    curl -Ss --request GET \
#.        --url "https://api.telegram.org/bot${bottoken}/getfile?file_id=${fileId}" >/root/t1

#    filePath=$(grep -o '"file_path":"[^"]'* /root/t1 | grep -o '[^"]*$')

#    curl -Ss --request GET \
#        --url "https://api.telegram.org/bot${bottoken}/sendMessage?chat_id=${adminid}&text=File ID   : <code>${fileId}</code>&parse_mode=html" &>/dev/null
    Send_Notif
    echo -e "[ ${green}INFO${NC} ] • Completed... "

    rm -rf /root/backup
    rm -r /root/$IP-$Name-$dateToday.zip
    rm -f /root/t1
    read -n 1 -s -r -p "Press any key to back on menu"
    m-bkp
}

function restoreBot() {
    bottoken=$(sed -n '1p' /root/.bckupbot | awk '{print $1}')
    read -p "File ID   : " fileId
    echo
    read -p "File PATH : " filePath
    curl -Ss --request GET \
        --url "https://api.telegram.org/file/bot${bottoken}/${filePath}?file_id=${fileId}" >backup.zip

    echo -e "[ ${green}INFO${NC} ] • Restore Data..."
	read -rp "Password File: "  InputPass
	echo -e "[ ${green}INFO${NC} ] • Getting your data..."
	unzip -P $InputPass /root/backup.zip &> /dev/null
    echo -e "[ ${green}INFO${NC} ] • Starting to restore data..."
    rm -f /root/backup.zip &> /dev/null
	sleep 1
    cd /root/backup
	echo -e "[ ${green}INFO${NC} ] • Please Wait , Restoring In Process Now... "
	sleep 1
	cp passwd /etc/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Restoring passwd data..."
	sleep 1
	cp group /etc/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Restoring group data..."
	sleep 1
	cp shadow /etc/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Restoring shadow data..."
	sleep 1
	cp gshadow /etc/ &>/dev/null
	echo -e "[ ${green}INFO${NC} ] • Restoring gshadow data..."
	sleep 1
    cp -r LT /var/lib/ &>/dev/null
    cp -r xray /etc/ &>/dev/null
    cp -r html /var/www/ &>/dev/null
    rm -rf /root/backup
    rm -f backup.zip
    echo -e "[ ${green}INFO${NC} ] • Done Restore... "
    read -n 1 -s -r -p "Press any key to back on menu"
    menu
}

function autoBackup() {
clear
BR1
echo -e "${R1}         AUTOBACKUP VPS                 \e[0m"
BR2
BR1
echo -e " ${LO}│$NC \e[97;1m[1] BACKUP SETIAP 1 JAM \e[0m"
echo -e " ${LO}│$NC \e[97;1m[2] BACKUP SETIAP 2 JAM \e[0m"
echo -e " ${LO}│$NC \e[97;1m[3] BACKUP SETIAP 3 JAM \e[0m"
echo -e " ${LO}│$NC \e[97;1m[4] BACKUP SETIAP 4 JAM \e[0m"
echo -e " ${LO}│$NC \e[97;1m[5] BACKUP SETIAP 5 JAM \e[0m"
echo -e " ${LO}│$NC \e[97;1m[6] BACKUP SETIAP 6 JAM \e[0m"
echo -e " ${LO}│$NC \e[91;1m[7] EXIT \e[0m"
BR2
echo ""
read -p " Just Input : " gasgas
case $gasgas in
1)
clear
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    if [ "${switch}" == "on" ]; then
        sed -i 's/switch on/switch off/g' /root/.bckupbot
        sed -i "/autobackup/d" /etc/crontab
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn Off"
    else
        sed -i 's/switch off/switch on/g' /root/.bckupbot
        echo "0 * * * * root autobackup" >>/etc/crontab
        echo "0 * * * * root autobackup" >>/etc/cron.d
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
    fi
clear

        echo -e "\e[97;1m ============================= \e[0m"
        echo -e "\e[97;1m   Autobackup Setiap :\e[92;1m 1 jam\e[0m"
        echo -e "\e[97;1m ============================= \e[0m"
        echo
        read -n 1 -s -r -p "Press any key to back on Bot menu"
        menu
;;
2)
clear
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    if [ "${switch}" == "on" ]; then
        sed -i 's/switch on/switch off/g' /root/.bckupbot
        sed -i "/autobackup/d" /etc/crontab
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn Off"
    else
        sed -i 's/switch off/switch on/g' /root/.bckupbot
        echo "0 */2 * * * root autobackup" >>/etc/crontab
        echo "0 */2 * * * root autobackup" >>/etc/cron.d
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn On"
    fi
clear

        echo -e "\e[97;1m ============================= \e[0m"
        echo -e "\e[97;1m   Autobackup Setiap :\e[92;1m 2 jam\e[0m"
        echo -e "\e[97;1m ============================= \e[0m"
        echo
        read -n 1 -s -r -p "Press any key to back on Bot menu"
        menu
;;
3)
clear
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    if [ "${switch}" == "on" ]; then
        sed -i 's/switch on/switch off/g' /root/.bckupbot
        sed -i "/autobackup/d" /etc/crontab
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn Off"
    else
        sed -i 's/switch off/switch on/g' /root/.bckupbot
        echo "0 */3 * * * root autobackup" >>/etc/crontab
        echo "0 */3 * * * root autobackup" >>/etc/cron.d
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn On"
    fi
clear

        echo -e "\e[97;1m ============================= \e[0m"
        echo -e "\e[97;1m   Autobackup Setiap :\e[92;1m 3 jam\e[0m"
        echo -e "\e[97;1m ============================= \e[0m"
        echo
        read -n 1 -s -r -p "Press any key to back on Bot menu"
        menu
;;
4)
clear
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    if [ "${switch}" == "on" ]; then
        sed -i 's/switch on/switch off/g' /root/.bckupbot
        sed -i "/autobackup/d" /etc/crontab
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn Off"
    else
        sed -i 's/switch off/switch on/g' /root/.bckupbot
        echo "0 */4 * * * root autobackup" >>/etc/crontab
        echo "0 */4 * * * root autobackup" >>/etc/cron.d
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn On"
    fi
clear

        echo -e "\e[97;1m ============================= \e[0m"
        echo -e "\e[97;1m   Autobackup Setiap :\e[92;1m 4 jam\e[0m"
        echo -e "\e[97;1m ============================= \e[0m"
        echo
        read -n 1 -s -r -p "Press any key to back on Bot menu"
        menu
;;
5)
clear
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    if [ "${switch}" == "on" ]; then
        sed -i 's/switch on/switch off/g' /root/.bckupbot
        sed -i "/autobackup/d" /etc/crontab
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn Off"
    else
        sed -i 's/switch off/switch on/g' /root/.bckupbot
        echo "0 */5 * * * root autobackup" >>/etc/crontab
        echo "0 */5 * * * root autobackup" >>/etc/cron.d
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn On"
    fi
clear

        echo -e "\e[97;1m ============================= \e[0m"
        echo -e "\e[97;1m   Autobackup Setiap :\e[92;1m 5 jam\e[0m"
        echo -e "\e[97;1m ============================= \e[0m"
        echo
        read -n 1 -s -r -p "Press any key to back on Bot menu"
        menu
;;
6)
clear
    switch=$(grep -i "switch" /root/.bckupbot | awk '{print $2}')
    if [ "${switch}" == "on" ]; then
        sed -i 's/switch on/switch off/g' /root/.bckupbot
        sed -i "/autobackup/d" /etc/crontab
        service cron restart >/dev/null 2>&1
        service cron reload >/dev/null 2>&1
        echo "Turn Off"
    else
        sed -i 's/switch off/switch on/g' /root/.bckupbot
        echo "0 */6 * * * root autobackup" >>/etc/crontab
        echo "0 */6 * * * root autobackup" >>/etc/cron.d
        service cron reload >/dev/null 2>&1
        echo "Turn On"
    fi
clear

        echo -e "\e[97;1m ============================= \e[0m"
        echo -e "\e[97;1m   Autobackup Setiap :\e[92;1m 6 jam\e[0m"
        echo -e "\e[97;1m ============================= \e[0m"
        echo
        read -n 1 -s -r -p "Press any key to back on Bot menu"
        menu
;;
7) exit ;;
esac

}

clear
BR1
echo -e "${R1}         BACKUP & RESTORE                 \e[0m"
BR2
BR1
echo -e " ${LO}│$NC \e[97;1m[1] AutoBackup Data  \e[0m"
echo -e " ${LO}│$NC \e[97;1m[2] Backup Data      \e[0m"
echo -e " ${LO}│$NC \e[97;1m[3] Restore Data     \e[0m"
echo -e " ${LO}│$NC \e[97;1m[4] GO BACK          \e[0m"
BR2
echo ""
read -p " Just Input Number 1-4 :  " botch
case $botch in
1) clear ; m-otw ;;
2) clear ; botBackup ;;
3) clear ; restoreBot ;;
4) clear ; menu ;;
esac